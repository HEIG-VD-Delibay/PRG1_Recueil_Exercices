skill Tableaux
exo [cjr] Déclaration d'arrays

Indiquer ce que va afficher la séquence d'instructions suivante.

_Il se peut qu'une séquence provoque une erreur à la compilation ou à l'exécution, voire ait un comportement indéfini. Le cas échéant, répondez `COMP` ("Erreur à la compilation"), `EXEC` ("Erreur à l'exécution") ou `INDE` ("Comportement indéfini")_

subexo [izd]
~~~cpp
// no 1
array<int,3> a;
for(int e : a) cout << e << ' ';
~~~

sol INDE
exp Le contenu de a est indéterminé 

subexo [xof]
~~~cpp
// no 2
array<int,3> a{1,2};
for(int e : a) cout << e << ' ';
~~~
sol 1 2 0

subexo [kml]
~~~cpp
// no 3
array<int,3> a{1,2,3,4};
for(int e : a) cout << e << ' ';
~~~
sol COMP
exp
```
main.cpp: In function ‘int main(int, char**)’:
main.cpp:7:31: error: too many initializers for ‘std::array<int, 3>’
    7 |     array<int, 3> a{1, 2, 3, 4};
      |                               ^
```

subexo [xmj]
~~~cpp
// no 4
array<int,3> a{};
for(int e : a) cout << e << ' ';
~~~
sol 0 0 0

subexo [lid]
~~~cpp
// no 5
array<string,3> a;
for(const string & e : a) cout << e.size() << ' ';
~~~
sol 0 0 0
exp Le comportement est déterminé. Un array de string est toujours initialisé
