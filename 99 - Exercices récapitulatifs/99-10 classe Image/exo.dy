exo Classe Image
Une image couleur est composée d'une grille rectangulaire de couleurs codées avec trois composantes RGB (Red, Green, Blue) auxquels on accède via leurs coordonnées (x,y) dans le plan. Ecrivez les structures et classe
suivantes

- une structure `Color` stockant les valeurs de `R`, `G` et `B` sous forme d'entiers non signés sur 8 bits
- ainsi qu'une structure `Coord` stockant les valeurs de `x` et `y` sous forme d'entiers non signés
    - la constante `Coord::origin` contient les coordonnées d'origine (0,0) communes à toutes les `Coord`
- et une classe `Image` qui
    - stocke sa dimension (hauteur `h` et largeur `w`) sous forme d'entiers non signés
    - stocke les `h * w` couleurs dans un tableau à 1 dimension
    - l'utilisateur spécifie `h` et `w` à l'initalisation, ainsi que la couleur unique servant à initialiser l'ensemble de l'image
    - permet de lire la dimension de l'image via des méthodes `getw` et `geth`
    - permet d'accéder en lecture (toujours) et en écriture (si l'image est variable) aux couleurs de l'image via leurs coordonnées. Pour un point de coordonnées `p`, l'indice correspondant dans le tableau 1D est `p.x + w * p.y`
        - lève une exception appropriée de la librairie `<stdexcept>` si la coordonnée fournie est en dehors de l'image
    - fournit une méthode `subImage` qui reçoit la coordonnée minimale et les longueur et largeur qui décrivent un rectangle dans l'image, et retourne un image de la taille demandée contenant le contenu de ce rectangle
        - lève une exception appropriée de la librairie `<stdexcept>` si le rectangle demandé n'est pas entièrement dans l'image

Seule la méthode `subImage` doit être définie séparément. Les autres peuvent être définie en ligne.

check Output correct
see
cyan codé comme (0,255,255)
p(10,20)
origin(0,0)
Image HD de taille 1280x720
La composante G du pixel de coordonnée p est 0
La composante G du pixel de coordonnée p est 255
sub de taille 20x10
La composante B du pixel en (0,0) est 255
